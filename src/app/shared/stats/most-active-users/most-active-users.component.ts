import { Component } from '@angular/core';

import { User } from './../../../models';

import { TimeFramedStatsComponent } from './../time-framed-stats/time-framed-stats.component';

@Component({
  selector: 'nb-most-active-users',
  templateUrl: './most-active-users.component.html',
  styleUrls: ['./most-active-users.component.css']
})
export class MostActiveUsersComponent extends TimeFramedStatsComponent {

  users: User[];

  private table: any;

  protected fetchData() {
    this.users = [];
    this.getUsers();
  }

  private buildTable() {
    const table: any = $('#most-active-users-datatable');
    if (!table) {
      const err = this.lang.get('err_failed_finding_datatable_v');
      return this.notificationService.notifyError(err);
    }

    const settings: Object = {
      pagingType: 'full_numbers',
      retrieve: true,
      order: [[2, 'desc']],
      columnDefs: [
        { targets: [0, 1], sortable: false, searchable: false }
      ]
    };

    setTimeout(() => {
      this.table = table.DataTable(<DataTables.Settings>settings);
    });
  }

  getUsers() {
    this.isBusy = true;
    this.subscription = this.statsService.getMostActiveUsers(this.timeFrame)
      .subscribe(
        data => {
          this.isBusy = false;
          this.users = data;

          if (this.users.length === 0) {
            return;
          }

          if (!this.table) {
            this.buildTable();
          } else if (this.table) {
            // make DataTable register new vehicles
            // by making it to "rerender" the rows generated by Angular2
            setTimeout(() => {
              const tbody = this.table.table().body();
              this.table
                .clear()
                .rows.add(jQuery(tbody).children('tr'))
                .draw()
              ;
            });
          }
        },
        err => {
          this.isBusy = false;
          this.notificationService.notifyError(this.lang.get('err_failed_fetching_vehicles'));
        }
      )
    ;
  }
}
